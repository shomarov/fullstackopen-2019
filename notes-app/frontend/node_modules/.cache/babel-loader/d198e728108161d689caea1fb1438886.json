{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/notes';\nlet token = null;\n\nconst setToken = newToken => {\n  token = \"bearer \".concat(newToken);\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = newObject => {\n  const request = axios.put(\"\".concat(baseUrl, \"/\").concat(newObject.id), newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update\n};","map":{"version":3,"sources":["/home/artur/Study/fullstackopen-2019/notes-app/frontend/src/services/notes.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","update","put","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AACzBF,EAAAA,KAAK,oBAAaE,QAAb,CAAL;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,SAAN,IAAmB;AAC9B,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADE,GAAf;AAGA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACH,CAND;;AAQA,MAAMO,MAAM,GAAIL,SAAD,IAAe;AAC1B,QAAMN,OAAO,GAAGN,KAAK,CAACkB,GAAN,WAAajB,OAAb,cAAwBW,SAAS,CAACO,EAAlC,GAAwCP,SAAxC,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACH,CAHD;;AAKA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBM,EAAAA;AAAlB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n    const config = {\n        headers: { Authorization: token }\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nconst update = (newObject) => {\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }"]},"metadata":{},"sourceType":"module"}