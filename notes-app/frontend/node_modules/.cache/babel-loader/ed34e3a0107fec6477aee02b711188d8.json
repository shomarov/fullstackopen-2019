{"ast":null,"code":"import _objectSpread from \"/home/artur/Study/fullstackopen-2019/notes-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/artur/Study/fullstackopen-2019/notes-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/artur/Study/fullstackopen-2019/notes-app/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n  return React.createElement(\"div\", {\n    style: footerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Note app, Department of Computer Science, University of Helsinki 2019\"));\n};\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorMessage = _useState8[0],\n        setErrorMessage = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        userName = _useState10[0],\n        setUsername = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        password = _useState12[0],\n        setPassword = _useState12[1];\n\n  const NotesToShow = showAll ? notes : notes.filter(note => note.important);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportance = id => {\n    const note = notes.find(n => n.id === id);\n\n    const changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    noteService.update(changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(\"Note '\".concat(note.content, \"' was already removed from server\"));\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const rows = () => NotesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportance(note.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Notification, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"save\")), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/artur/Study/fullstackopen-2019/notes-app/frontend/src/App.js"],"names":["React","useState","useEffect","Note","noteService","Notification","Footer","footerStyle","color","fontStyle","fontSize","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","userName","setUsername","password","setPassword","NotesToShow","filter","note","important","getAll","then","initialNotes","toggleImportance","id","find","n","changedNote","update","returnedNote","map","catch","error","content","setTimeout","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","create","concat","rows","handleNoteChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [userName, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const NotesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportance = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n\n  }\n\n  const rows = () => NotesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportance(note.id)}\n    />\n  )\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}