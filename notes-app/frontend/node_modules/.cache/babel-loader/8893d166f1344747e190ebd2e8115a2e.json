{"ast":null,"code":"import _objectSpread from \"/home/artur/Study/fullstackopen-2019/part3/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/artur/Study/fullstackopen-2019/part3/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/artur/Study/fullstackopen-2019/part3/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n  return React.createElement(\"div\", {\n    style: footerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Note app, Department of Computer Science, University of Helsinki 2019\"));\n};\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorMessage = _useState8[0],\n        setErrorMessage = _useState8[1];\n\n  const NotesToShow = showAll ? notes : notes.filter(note => note.important);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportance = id => {\n    const note = notes.find(n => n.id === id);\n\n    const changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    noteService.update(changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(\"Note '\".concat(note.content, \"' was already removed from server\"));\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const rows = () => NotesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportance(note.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Notification, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"save\")), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/artur/Study/fullstackopen-2019/part3/frontend/src/App.js"],"names":["React","useState","useEffect","Note","noteService","Notification","Footer","footerStyle","color","fontStyle","fontSize","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","NotesToShow","filter","note","important","getAll","then","initialNotes","toggleImportance","id","find","n","changedNote","update","returnedNote","map","catch","error","content","setTimeout","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","create","concat","rows","handleNoteChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n        </div>\n    )\n}\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    const NotesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }, [])\n\n    const toggleImportance = id => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        noteService\n            .update(changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n            id: notes.length + 1\n        }\n\n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote))\n                setNewNote('')\n            })\n\n    }\n\n    const rows = () => NotesToShow.map(note =>\n        <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n        />\n    )\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value)\n    }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n\n            <Notification message={errorMessage} />\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input\n                    value={newNote}\n                    onChange={handleNoteChange}\n                />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}