{"ast":null,"code":"import _objectSpread from \"/home/artur/Study/fullstackopen-2019/osa3/puhelinluettelo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/artur/Study/fullstackopen-2019/osa3/puhelinluettelo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/artur/Study/fullstackopen-2019/osa3/puhelinluettelo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\nimport ErrorMessage from './components/ErrorMessage';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        newFilter = _useState8[0],\n        setNewFilter = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        notificationMessage = _useState10[0],\n        setNotificationMessage = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        errorMessage = _useState12[0],\n        setErrorMessage = _useState12[1];\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.some(person => person.name === newName)) {\n      if (!window.confirm(\"\".concat(newName, \" is already added to phonebook, replace the old number\\n      with a new one?\"))) {\n        return;\n      }\n\n      const personToUpdate = persons.find(person => person.name === newName);\n\n      const updatedPerson = _objectSpread({}, personToUpdate, {\n        number: newNumber\n      });\n\n      personService.update(updatedPerson).then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson));\n        setNotificationMessage(\"Updated \".concat(returnedPerson.name));\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      }).catch(error => {\n        setErrorMessage(\"Information of \".concat(updatedPerson.name, \" has already\\n            been removed from server\"));\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setPersons(persons.filter(person => person.id !== updatedPerson.id));\n      });\n      setNewNumber('');\n      setNewName('');\n      return;\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    personService.create(newPerson).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      setNewName('');\n      setNewNumber('');\n      setNotificationMessage(\"Added \".concat(returnedPerson.name));\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }).catch(error => {\n      console.log(error.response.data);\n      setErrorMessage(error.response.data);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n    setNewNumber('');\n    setNewName('');\n  };\n\n  const handleRemoveButtonClick = personToDelete => {\n    if (!window.confirm(\"Delete \".concat(personToDelete.name, \"?\"))) {\n      return;\n    }\n\n    personService.remove(personToDelete.id).then(setPersons(persons.filter(person => person.id !== personToDelete.id))).then(setNotificationMessage(\"Deleted \".concat(personToDelete.name))).then(setTimeout(() => {\n      setNotificationMessage(null);\n    }, 5000)).catch(error => {\n      setErrorMessage(\"Information of \".concat(personToDelete.name, \" has already\\n          been removed from server\"));\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(Notification, {\n    message: notificationMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Filter, {\n    onFilterChange: handleFilterChange,\n    filter: newFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"add a new\"), React.createElement(PersonForm, {\n    onSubmit: addPerson,\n    onNameChange: handleNameChange,\n    nameValue: newName,\n    onNumberChange: handleNumberChange,\n    numberValue: newNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    persons: persons,\n    filter: newFilter,\n    handleRemoveButtonClick: handleRemoveButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/artur/Study/fullstackopen-2019/osa3/puhelinluettelo/src/App.js"],"names":["React","useState","useEffect","PersonForm","Persons","Filter","personService","Notification","ErrorMessage","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","getAll","then","initialPersons","handleNameChange","event","target","value","handleNumberChange","handleFilterChange","addPerson","preventDefault","some","person","name","window","confirm","personToUpdate","find","updatedPerson","number","update","returnedPerson","map","id","setTimeout","catch","error","filter","newPerson","create","concat","console","log","response","data","handleRemoveButtonClick","personToDelete","remove"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if ((persons.some(person => person.name === newName))) {\n      if (!window.confirm(`${newName} is already added to phonebook, replace the old number\n      with a new one?`)) {\n        return\n      }\n\n      const personToUpdate = persons.find(person => person.name === newName)\n      const updatedPerson = { ...personToUpdate, number: newNumber }\n\n      personService\n        .update(updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person =>\n            person.id !== returnedPerson.id\n              ? person : returnedPerson))\n          setNotificationMessage(`Updated ${returnedPerson.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(`Information of ${updatedPerson.name} has already\n            been removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== updatedPerson.id))\n        })\n\n\n      setNewNumber('')\n      setNewName('')\n\n      return\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setErrorMessage(error.response.data)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n\n    setNewNumber('')\n    setNewName('')\n\n  }\n\n  const handleRemoveButtonClick = (personToDelete) => {\n    if (!window.confirm(`Delete ${personToDelete.name}?`)) {\n      return\n    }\n\n    personService\n      .remove(personToDelete.id)\n      .then(setPersons(persons.filter(person => person.id !== personToDelete.id)))\n      .then(\n        setNotificationMessage(`Deleted ${personToDelete.name}`))\n      .then(\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000))\n      .catch(error => {\n        setErrorMessage(`Information of ${personToDelete.name} has already\n          been removed from server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <ErrorMessage message={errorMessage} />\n      <Filter onFilterChange={handleFilterChange} filter={newFilter} />\n      <h3>add a new</h3>\n      <PersonForm onSubmit={addPerson} onNameChange={handleNameChange}\n        nameValue={newName} onNumberChange={handleNumberChange} numberValue={newNumber} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={newFilter}\n        handleRemoveButtonClick={handleRemoveButtonClick} />\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}